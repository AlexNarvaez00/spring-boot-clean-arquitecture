package mx.edu.itoaxaca.api.v1.{{name}}.domain;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertInstanceOf;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.UUID;
import mx.edu.itoaxaca.api.v1.shared.domain.WithTimestampsTest;
import org.junit.jupiter.api.Test;

public class {{Name}}Test {

    @Test
    void testCreate{{Name}}() {
        {{Name}} temp = {{Name}}Mother.random();
        assertNotNull(temp.getId());
    }

    @Test
    void testCreate{{Name}}WithNullValue() {
        {{Name}} temp = new {{Name}}();
        assertNull(temp.getId());
    }

    @Test
    void testCompare{{Name}}() {
        {{Name}} temp = {{Name}}Mother.random();
        {{Name}} temp2 = temp;
        assertTrue(temp.equals(temp2));
        assertInstanceOf(Integer.class, temp2.hashCode());
    }

    @Test
    void testToString() {
        {{Name}} {{name}} = {{Name}}Mother.random();
        assertTrue({{name}}.toString().contains({{name}}.getId().toString()));
    }

    @Test
    void testNotCompare{{Name}}() {
        {{Name}} temp = {{Name}}Mother.random();
        {{Name}} temp2 = {{Name}}Mother.random();
        assertFalse(temp.equals(temp2));
    }

    @Test
    void testSettingValues() {
        {{Name}} {{name}} = new {{Name}}();

        UUID uuid = UUID.randomUUID();
        {{name}}.setId(uuid);
        assertInstanceOf(UUID.class, {{name}}.getId());
    }

    @Test
    void testTimestamps() {
        {{Name}} {{name}} = {{Name}}Mother.random();
        var {{name}}Assert = new WithTimestampsTest<{{Name}}>();
        {{name}}Assert.assertWithTimestamp({{name}});

        {{Name}} {{name}}2 = {{name}};
        {{name}}Assert.assertEqualsTimestamps({{name}}, {{name}}2);
    }

}